{"version":3,"sources":["hooks/useLocalSrorage.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["useLocalStorage","key","defaultValue","useState","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","ContactForm","onSubmit","contactName","setContactName","contactNumber","setContactNumber","handleChange","evt","currentTarget","name","value","className","s","form","preventDefault","label","type","input","onChange","btn","ContactList","contacts","onDeleteContact","map","id","number","item","onClick","Filter","App","filter","setFilter","setContacts","console","log","contact","shortid","generate","prevContacts","normalizedFilter","toLowerCase","includes","getVisibleContact","contactId","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7ee147d8.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useLocalStorage = (key, defaultValue) => {\r\n    const [state, setState] = useState( () => JSON.parse(window.localStorage.getItem(key)) ?? defaultValue );\r\n    useEffect( () => {\r\n        window.localStorage.setItem(key, JSON.stringify(state));\r\n    }, [key, state]);\r\n    return [state, setState];\r\n};\r\n\r\nexport default useLocalStorage;","import { useState } from 'react';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport function ContactForm({onSubmit}) {\r\n  const [contactName, setContactName] = useState('');\r\n  const [contactNumber, setContactNumber] = useState('');\r\n\r\n  const handleChange = evt => {\r\n    const {name, value} = evt.currentTarget;\r\n    if (name === 'contactName') {setContactName(value)}\r\n    if (name === 'contactNumber') {setContactNumber(value)}\r\n  };\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    onSubmit({contactName, contactNumber});\r\n    setContactName('');\r\n    setContactNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n          Name\r\n          <input \r\n              type=\"text\" \r\n              name=\"contactName\" \r\n              className={s.input}\r\n              value={contactName}\r\n              onChange={handleChange}\r\n          />\r\n      </label>\r\n      <label className={s.label}>\r\n          Number\r\n          <input \r\n              type=\"text\" \r\n              name=\"contactNumber\" \r\n              className={s.input}\r\n              value={contactNumber}\r\n              onChange={handleChange}\r\n          />\r\n      </label>\r\n      <button type=\"submit\" className={s.btn}>Add contact</button>\r\n    </form>\r\n  );\r\n}","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nexport const ContactList = ({contacts, onDeleteContact}) => {\r\n    return (\r\n        <ul>\r\n            {contacts.map(({id, name, number}) => (\r\n                <li key={id} className={s.item}>\r\n                    {name}: {number}\r\n                    <button \r\n                        type=\"button\"\r\n                        className={s.btn} \r\n                        onClick={() => onDeleteContact(id)}\r\n                    >Delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};","import PropTypes from 'prop-types';\r\n\r\nexport const Filter = ({value, onChange}) => {\r\n    return (\r\n        <label>\r\n            Filter by name \r\n            <input \r\n                type=\"text\" \r\n                value={value} \r\n                onChange={onChange}\r\n            />\r\n        </label>\r\n    );\r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};","import { useState } from 'react';\nimport shortid from 'shortid';\nimport useLocalStorage from './hooks/useLocalSrorage';\nimport { ContactForm } from './components/ContactForm/ContactForm';\nimport { ContactList } from './components/ContactList/ContactList';\nimport { Filter } from './components/Filter/Filter';\n\n\n\nexport default function App() {\n  const [filter, setFilter] = useState('');\n  const [contacts, setContacts] = useLocalStorage('contacts', [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'}\n  ]);\n  \n  const addContact = ({contactName, contactNumber}) => {\n    const contact = {\n        id: shortid.generate(),\n        name: contactName,\n        number: contactNumber,\n    };\n    setContacts( prevContacts => [contact, ...prevContacts]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevContacts => prevContacts.filter(contact => contact.id !== contactId));\n  }\n\n  const changeFilter = evt => {\n    setFilter(evt.currentTarget.value);\n  };\n\n  const getVisibleContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n  console.log(contacts);\n\n  return (\n    <div>\n      <h1>PhoneBook</h1>\n      <ContactForm onSubmit={addContact}/>\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter}/>\n      <ContactList contacts={getVisibleContact()} onDeleteContact={deleteContact}/>\n    </div>\n  );\n}\n\n\n  // componentDidMount() {\n  //   const contacts = localStorage.getItem('contacts');\n  //   const parsedContacts = JSON.parse(contacts);\n  //   if (parsedContacts) {\n  //     this.setState({contacts: parsedContacts});\n  //   }\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (this.state.contacts !== prevState.contacts) {\n  //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  //   }\n  // }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3Fiwa\",\"label\":\"ContactForm_label__19uaE\",\"input\":\"ContactForm_input__HZr4Z\",\"btn\":\"ContactForm_btn__3a_Rk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__27I_U\",\"btn\":\"ContactList_btn__sRJ1D\"};"],"sourceRoot":""}